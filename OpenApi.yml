openapi: 3.0.0
info:
  title: Halcyon
  description: Api documentation for Halcyon
  version: 1.5.0
servers:
  - url: https://halcyon-next.vercel.app/api
    description: Stable development
  - url: https://halcyon-next-develop.vercel.app/api
    description: Nighlty development
  - url: https://halcyon-ssw555.herokuapp.com/
    description: Flask server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    error_missing_header:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
          title: 'Missing authorization header'
    room:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        timeInterval:
          type: number
        startAvailableTime:
          type: string 
        endAvailableTime:
          type: string 
        availableTimes:
          type: array
          items: 
            type: string
    employee:
      type: object
      properties:
        id:
          type: string 
        email:
          type: string 
        firstName:
          type: string 
        lastName:
          type: string 
        isConfirmed:
          type: boolean
        birthday:
          type: string
          format: date
        gender:
          type: string
    reservation:
      type: object
      properties:
        id:
          type: string 
        employeeId:
          type: string 
        date:
          type: string 
          format: string
        startTime:
          type: string 
        endTime:
          type: string
        meditationRoomId:
          type: string
    sound:
      type: object
      properties:
        id:
          type: string 
        description:
          type: string 
        length:
          type: number
        credit:
          type: string 
        url:
          type: string
        type:
          type: string
          enum: [song, sound, guide]
    reminder:
      type: object
      properties:
        id:
          type: string 
        employeeId:
          type: string 
        startAt:
          type: string
        endAt:
          type: string 
        interval:
          type: number
        type:
          type: string
          enum: [water, break]
    goal:
      type: object
      properties:
        id:
          type: string 
        employeeId:
          type: string 
        target:
          type: number
        category:
          type: string 
          enum: [guided_meditation, meditation, water, break]
        frequency:
          type: string 
          enum: [daily, weekly, monthly, yearly]
        createdAt:
          type: string 
          format: 'date-time'
    event:
      type: object
      properties:
        id:
          type: string 
        employeeId:
          type: string 
        state:
          type: string
          enum: [completed, cancel]
        category:
          type: string 
          enum: [guided_meditation, meditation, water, break]
        length:
          type: number
        createdAt:
          type: string 
          format: 'date-time'
    personality_question:
      type: object
      properties:
        id:
          type: string 
        content:
          type: string 
        index:
          type: number
        options:
          type: array
          items: 
            $ref: '#/components/schemas/personality_option'
    personality_option:
      type: object
      properties:
        id:
          type: string 
        questionId:
          type: string 
        content:
          type: string
        index:
          type: number 
        value:
          type: string
          enum: [e,i,s,n,t,f,j,p]
    mood_activity:
      type: object
      properties:
        id:
          type: string 
        inputEmotion:
          type: string 
        activity:
          type: string
        outputEmotion:
          type: string 

security:
  - bearerAuth: [] 
        
paths:
  /auth/login:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                password:
                  type: string
      summary: Authenticate user
      responses:
        '401':
          description: 'Invalid credentials'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Success message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  authToken:
                    type: string
                  expiredAt:
                    type: string
                  message:
                    type: string
                  status:
                    type: string
  /me:
    get:
      security:
        - bearerAuth: []
      summary: Return employee information from jwt token
      responses:
        '401':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: Return employee information from jwt token
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  employee: 
                    $ref: '#/components/schemas/employee'
                      
  /reservation:
    get:
      security:
        - bearerAuth: []
      summary: Return employee reservation
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: Returns a reservation
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  reservation:   
                    $ref: '#/components/schemas/reservation'
  /rooms:
    get:
      security:
        - bearerAuth: []
      summary: Returns a list of rooms
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: A JSON array of rooms
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  rooms:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/room'
  /rooms/{roomId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          schema:
            type: string
          required: true
          description: Numeric ID of the room
      summary: Returns a list of available time in the break out room
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Room not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':    # status code
          description: Get a room object
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  room:
                    $ref: '#/components/schemas/room'                     
  /rooms/{roomId}/book:
    post:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          schema:
            type: integer
          required: true
          description: Numeric ID of the room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                time: 
                  type: string
                  format: 'date-time'
      summary: Book a specific room in a specific time
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Room not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Success message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
        '409':    
          description: 'If there is a conflict booking the room'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /rooms/{roomId}/update:
    post:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          schema:
            type: integer
          required: true
          description: Numeric ID of the room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                time: 
                  type: string
                  format: 'date-time'
      summary: Book a specific room in a specific time
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Room not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Success message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
  /rooms/{roomId}/cancel:
    post:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          schema:
            type: integer
          required: true
          description: Numeric ID of the room
      summary: Cancel a reservation
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Room not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Success message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
  /sounds:
    get:
      security:
        - bearerAuth: []
      summary: Returns a list of sounds
      parameters:
        - in: query
          name: type
          description: Adds a filter to the types of sound
          schema:
            type: string
            enum: [song, sound, guide]
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: A JSON array of sounds
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  sounds:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/sound'
  /sounds/{soundId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: soundId
          schema:
            type: integer
          required: true
          description: Id of the sound
      summary: Return a sound by it's id
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Sound not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Success message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
                  sound:
                    $ref: '#/components/schemas/sound'
  /reminders:
    get:
      security:
        - bearerAuth: []
      summary: Returns a list of reminders for the employee
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: A JSON array of sounds
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  reminders:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/reminder'
    put:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [water, break]
                interval:
                  type: number
                startAt:
                  type: string
                endAt:
                  type: string
      summary: Update the value of the reminder for the employee
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: Return the updated reminder
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  reminder:   
                    type: object
                    $ref: '#/components/schemas/reminder'
  /goals:
    get:
      security:
        - bearerAuth: []
      summary: Return a list of all the employee goals
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':
          description: A JSON array of goals
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  goals:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/goal'
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: number
                category:
                  type: string 
                  enum: [guided_meditation, meditation, water, break]
                frequency:
                  type: string 
                  enum: [daily, weekly, monthly, yearly]
      summary: Create a new goal for the employee
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: Return the created goal
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  goal:   
                    type: object
                    $ref: '#/components/schemas/goal'
  /goals/{goalId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: goalId
          schema:
            type: integer
          required: true
          description: Id of the goal
      summary: Return a goal by it's id
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Goal not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Success message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
                  goal:
                    $ref: '#/components/schemas/goal'
    put:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: goalId
          schema:
            type: integer
          required: true
          description: Id of the goal
      summary: Return the updated goal by it's id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: number
                frequency:
                  type: string 
                  enum: [daily, weekly, monthly, yearly]
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Goal not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Return the updated goal
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
                  goal:
                    $ref: '#/components/schemas/goal'
    delete:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: goalId
          schema:
            type: integer
          required: true
          description: Id of the goal
      summary: Return the id of the deleted goal
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '404':
          description: 'Goal not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '200':
          description: Return the id of the deleted goal
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: string
                  id:
                    type: string
  /events:
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum: [completed, cancel]
                category:
                  type: string 
                  enum: [guided_meditation, meditation, water, break]
                length:
                  type: number
      summary: Send employee event
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: An event response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  event:   
                    $ref: '#/components/schemas/event'
    get:
      security:
        - bearerAuth: []
      summary: Get employee events
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: An event response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  events:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/event'
  /personality/questions:
    get:
      security:
        - bearerAuth: []
      summary: Get questions for personality detection
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: An event response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  questions:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/personality_question'
  /moods/activities:
    get:
      security:
        - bearerAuth: []
      summary: Get activities to change moods
      responses:
        '400':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '200':    # status code
          description: An event response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                  questions:   
                    type: array
                    items: 
                      $ref: '#/components/schemas/mood_activity'